//
// File: scss/frontend.scss
//
// Styles for the public front-end.
//
// Since:
//   0.9.1 - DTRT WordPress Plugin Boilerplate Generator
//

// -------------------------------------------------------------------
// Variables
// -------------------------------------------------------------------

@import '../node_modules/wpdtrt-scss/scss/variables/scss';
@import 'variables/scss';

// -------------------------------------------------------------------
// Mixins
// -------------------------------------------------------------------

@import '../node_modules/wpdtrt-scss/scss/mixins';

// -------------------------------------------------------------------
// Extends
// -------------------------------------------------------------------

@import '../node_modules/wpdtrt-scss/scss/extends';

// -------------------------------------------------------------------
// Styles
// -------------------------------------------------------------------

// @import '../icons/icomoon/style.scss';
@import '../node_modules/wpdtrt-scss/scss/_frontend';

// Custom forms

.wpdtrt-form {
    $block: &;

    &__block {
        box-sizing: border-box;
        padding: .3em;
        border: 1px solid var(--wpdtrt-form-border-color);
    }

    &__block-error {
        background-color: var(--wpdtrt-form-error-bgcolor);
        border-color: var(--wpdtrt-form-error-color);
    }

    &__button {
        background-color: var(--wpdtrt-form-button-bgcolor);
        color: var(--wpdtrt-form-button-color);
        font-size: .7em;
        line-height: normal;
        font-weight: bold;
        text-transform: uppercase;
        padding: 12px;
        border: 0;
        margin: 0;
        cursor: pointer;
    }

    &__checkbox {
        float: left;
        width: auto;
        border-radius: 0;
        margin-top: 3px;
        margin-right: .4em;
        margin-left: .1em;
        transform: scale(1.5);

        + #{$block}__label {
            width: auto;
            margin-left: 24px;
        }
    }

    &__error {
        color: var(--wpdtrt-form-error-color);
        font-weight: normal;
        border-color: var(--wpdtrt-form-error-color);
    }

    &__error-list {
        @extend %wpdtrt-scss-reset-list;
        font-size: .9em;
        counter-reset: error-counter;
        margin-top: .5em;

        > li {
            @extend %wpdtrt-scss-reset-list;
            counter-increment: error-counter;

            &::before {
                content: counter(error-counter) '.';
                color: var(--wpdtrt-form-error-list-bullet-color);
            }
        }

        a {
            color: var(--wpdtrt-form-error-list-link-color);
        }
    }

    &__fieldset {
        @extend %wpdtrt-scss-reset-fieldset;
    }

    &__hint {
        display: block;
        font-size: .7em;
        line-height: 1.25;
        font-style: normal;
        margin-top: 8px;
    }

    &__notes {
        font-size: .9em;
        line-height: 1.5;
    }

    &__item {
        // label and input
        margin-bottom: 32px;
    }

    &__label {
        display: block;
        font-size: .85em;
        line-height: 1.25;
        margin-bottom: 10px;

        &--required {
            &::after {
                content: ' *';
            }

            &.error {
                &::after {
                    color: var(--wpdtrt-form-error-color);
                }
            }
        }

        &.error {
            > .required {
                @extend .wpdtrt-form__error;
            }
        }
    }

    &__legend {
        width: 100%;
        font-weight: bold;
        margin-bottom: 32px;
    }

    &__required {
        @extend %wpdtrt-scss-hide-visually;
    }

    &__select {
        font-size: .9em;
    }

    &__status {
        color: var(--wpdtrt-form-status-color);
        font-size: .8em;
        line-height: 1.5;
        padding: 4px; // TODO: how to do matching negative margin with CSS Grid?
        margin-bottom: 16px;

        p {
            &,
            .entry-content & {
                padding-top: 4px;
                margin: 0;
            }
        }

        &--error {
            background-color: var(--wpdtrt-form-status-error-bgcolor);
        }

        &--success {
            background-color: var(--wpdtrt-form-status-success-bgcolor);
        }
    }

    &__submit-wrapper {
        text-align: right;
    }

    &__submit {
        margin: 0;
    }

    &__textfield {
        display: block;
        width: 100%;
        background-color: var(--wpdtrt-form-textfield-bgcolor);
        font-size: .8em;
        line-height: normal;
        padding: 8px;
        border: 1px solid var(--wpdtrt-form-textfield-bordercolor);

        &:focus {
            background-color: var(--wpdtrt-form-textfield-bgcolor-focus);
        }

        &.error {
            @extend .wpdtrt-form__error;
        }

        &[aria-invalid='true'] {
            @extend .wpdtrt-form__block-error;
        }
    }

    &__textfield-sizes {
        &.large-text {
            width: 85%;
        }

        &.regular-text {
            width: 350px;
        }

        &.small-text {
            width: 50px;
        }

        &.tiny-text {
            width: 35px;
        }
    }

    &__validation {
        @extend .wpdtrt-form__hint;

        strong {
            font-weight: normal;
        }

        > .error {
            @extend .wpdtrt-form__error;
        }
    }
}

// WordPress forms

// button element is handled per project via custom selector

input {
    &[id] { // override noramlize
        &[type='button'],
        &[type='reset'],
        &[type='submit'] {
            &,
            &[disabled] {
                @extend .wpdtrt-form__button;

                &:hover,
                &:focus {
                    @extend .wpdtrt-form__button;
                }
            }
        }

        &[type='date'],
        &[type='datetime-local'],
        &[type='email'],
        &[type='month'],
        &[type='number'],
        &[type='password'],
        &[type='search'],
        &[type='tel'],
        &[type='text'],
        &[type='time'],
        &[type='url'],
        &[type='week'] {
            @extend .wpdtrt-form__textfield;
        }

        &[type='checkbox'] {
            @extend .wpdtrt-form__checkbox;
        }
    }
}

textarea {
    &[id] { // override noramlize
        @extend .wpdtrt-form__textfield;
    }
}

.comment-form {
    .form-submit {
        @extend .wpdtrt-form__submit-wrapper;
    }

    label {
        @extend .wpdtrt-form__label;
    }

    .validation {
        @extend .wpdtrt-form__validation;
    }

    > p {
        .entry-content & {
            @extend .wpdtrt-form__item;
        }
    }
}

.comment-notes {
    @extend .wpdtrt-form__notes;

    .entry-content .entry-summary + & {
        @extend .wpdtrt-form__notes;
        margin-top: 20px;
    }

    .entry-content & {
        margin-bottom: 32px;
    }
}
